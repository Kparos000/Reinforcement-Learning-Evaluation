[project]
name = "rl-ace-evaluation"
version = "1.0.0"
description = "Production-grade Reinforcement Learning evaluation framework inspired by Agentic Context Engineering (ACE)"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["reinforcement-learning", "nlp", "evaluation", "ace", "context-engineering"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "anthropic>=0.67.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    "pydantic>=2.0.0",
    "numpy>=1.24.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "pandas>=2.0.0",
    "tqdm>=4.65.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
ml = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
]
tracking = [
    "mlflow>=2.8.0",
    "wandb>=0.15.0",
]

[project.scripts]
ace-eval = "ace_task.cli:main"

[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["ace_task*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=ace_task",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=75",
    "-v",
]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["E501", "N805"]  # N805: false positive for Pydantic validators

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
